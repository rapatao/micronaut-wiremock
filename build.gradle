plugins {
    id "io.gitlab.arturbosch.detekt" version "${detektPluginVersion}"
    id "io.micronaut.minimal.library" version "${micronautPluginVersion}"
    id "org.jetbrains.dokka" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.jvm" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.kapt" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.plugin.allopen" version "${kotlinVersion}"
    id "org.jetbrains.kotlinx.kover" version "${koverPluginVersion}"
    id "signing"
    id 'maven-publish'
}

group = 'com.rapatao.micronaut'
version = '1.0.2-SNAPSHOT'

repositories {
    mavenCentral()
}

micronaut {
    version "3.7.1"
    testRuntime "junit5"
    processing {
        incremental true
        annotations "com.rapatao.micronaut.wiremock.*"
    }
}

dependencies {
    implementation("com.github.tomakehurst:wiremock-jre8:${wiremockVersion}")

    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

    compileOnly("org.junit.jupiter:junit-jupiter-api")

    testImplementation("io.micronaut:micronaut-http-client")
}

java {
    withSourcesJar()
    withJavadocJar()
}

compileKotlin {
    kotlinOptions.jvmTarget = "${javaVersion}"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "${javaVersion}"
}

kover {
    xmlReport {
        onCheck = true
    }

    htmlReport {
        onCheck = true
    }

    verify {
        rule {
            name = "Minimal line coverage rate in percents"
            bound {
                minValue = 90
            }
        }
    }
}

detekt {
    buildUponDefaultConfig = true
    allRules = false

    reports {
        html.enabled = true
        xml.enabled = true
        txt.enabled = true
        sarif.enabled = true
    }
}

signing {
    sign configurations.archives
    sign publishing.publications
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            pom {
                name = "Micronaut WireMock Support"
                description = "WireMock integration for Micronaut"
                url = "https://github.com/rapatao/micronaut-wiremock"
                packaging = "jar"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "rapatao"
                        name = "Luiz Henrique Rapatao"
                        email = "rapatao@rapatao.com"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/rapatao/micronaut-wiremock.git"
                    developerConnection = "scm:git:ssh://github.com/rapatao/micronaut-wiremock.git"
                    url = "https://github.com/rapatao/micronaut-wiremock"
                }
            }
        }
    }
    repositories {
        maven {
            url = uri("${buildDir}/publishing-repository")
        }
        maven {
            def releasesRepoUrl = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
            def snapshotsRepoUrl = uri("https://oss.sonatype.org/content/repositories/snapshots/")
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}
